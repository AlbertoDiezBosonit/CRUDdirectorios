


#spring.datasource.url=jdbc:mariadb://localhost:3306/prueba
#spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
##spring.jpa.hibernate.ddl-auto=create-drop
#spring.jpa.hibernate.ddl-auto=update



#para la base de datos h2
#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console

#spring.jpa.hibernate.ddl-auto=update


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url=jdbc:postgresql://localhost:5432/uno
##spring.datasource.url=jdbc:postgresql://172.18.0.2:5432/uno

//spring.datasource.url=jdbc:postgresql://postgres:5432/uno # esto es para la red docker

spring.datasource.username=postgres
spring.datasource.password=password

#spring.jpa.hibernate.ddl-auto=create-drop
  # para generar y borrar las tablas
spring.jpa.hibernate.ddl-auto=update


##spring.datasource.url=jdbc:h2:file:~/jpademo
##spring.datasource.url=jdbc:h2:tcp://localhost/~/test
##hay que poner esta como base de datos
##spring.datasource.driverClassName=org.h2.Driver
##spring.datasource.username=sa
##spring.datasource.password=
hibernate.dialect=org.hibernate.dialect.HSQLDialect


#spring.jpa.hibernate.dll-auto=create-drop
#javax.persistence.schema-generation.database.action=create #con esto generamos las tablas automaticamente

spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true
